get:
  tags:
    - MenuItem
  summary: List Menu Item API
  description: Aggregate and return menu item listing by query
  servers:
    - url: 'http://listing.teko.com/{basePath}'
      variables:
        basePath:
          default: api
    - url: 'http://listing-dev.teko.com/{basePath}'
      variables:
        basePath:
          default: api
  parameters:
    - name: zoneId
      in: query
      description: |
        filter theo zone id của menu item
      required: true
      schema:
        type: integer
      example: 1
    - name: level
      in: query
      description: |
        filter theo level của menu item
      required: false
      schema:
        type: integer
      example: 1
    - name: parentId
      in: query
      description: |
        filter theo parentId của menu item
      required: false
      schema:
        type: integer
      example: 1
    - name: _limit
      in: query
      description: |
        maximum number of menu items in response
      required: false
      schema:
        type: integer
        default: 20
      example: 20
    - name: _page
      in: query
      description: |
        page number
      required: false
      schema:
        type: integer
        default: 1
      example: 1
    - name: _sort
      in: query
      required: false
      description: |
        Listing conditions for sorting result.(Enum: ["priority"])
      schema:
        type: string
      example: priority
    - name: _order
      in: query
      required: false
      description: |
        Values: [`asc`, `desc`]
      schema:
        type: string
      example: desc
  responses:
    200:
      description: response for successful request
      headers:
        requestId:
          schema:
            type: string
          description: uuid request for tracking
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListingMenuItemResp'
    400:
      description: invalid parameters
      headers:
        requestId:
          schema:
            type: string
          description: uuid request for tracking
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListingError'
          examples:
            error:
              summary: An example of 400 error
              value:
                code: "BAD_REQUEST"
                message: "400 Bad Request: Input payload validation failed. menu items limit, starting from 1 invalid literal for int() with base 10: 'b'"
    500:
      description: response when server has error
      headers:
        requestId:
          schema:
            type: string
          description: uuid request for tracking
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ListingError'
          example:
            code: 'INTERNAL_SERVER'
            message: 'Connection to elasticsearch has troubles'